import {useCallback, useState, useEffect, useRef} from "react";
import Head from 'next/head';
import Image from 'next/image';
import axios from 'axios';
import { Modal, ModalOverlay, ModalBody, ModalContent, ModalCloseButton, useDisclosure, Button } from '@chakra-ui/react';
import styles from '../styles/Home.module.css';
import { getURL } from "next/dist/next-server/lib/utils";
import React, {  } from "react";
import ReactDOM from "react-dom";
import styled from "styled-components";


export default function Home() {
  const { isOpen, onClose, onOpen } = useDisclosure();
  const [contactList, setContactList] = useState([]);
  const [showModal, setShowModal] = useState(false);

  const getContact = useCallback( async () => {
    try {
      const response = await axios.get('/api/contacts');
      setContactList(response.data);

    }

    catch(e) {
      console.error(e);
    }

  }, []);

  const newContact = useCallback( async () => {
    try {



    }

    catch(e) {
      console.error(e);
    }

  }, []);

  const updateContact = useCallback( async () => {
    try {
      const response = await axios.patch('/api/contacts');
      setContactList(response.data);
    }

    catch(e) {
      console.error(e);
    }

  }, []);

  const removeContact = useCallback( async (id) => {
    try {
      const response = await axios.delete(`/api/contacts/${id}`);
      // setContactList(response.data);
      console.log(response)
    }

    catch(e) {
      console.error(e);
    }

  }, []);

const addContact = 2


  return (
    <div className={styles.container}>

      <Head>
        <title>My Contact List</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      <main className={styles.main}>
    <div>
        <h1 className={styles.title}>
          Your contact list!
        </h1>
    </div>

    <div>
    <button onClick={getContact}>Get Contacts</button>
      {contactList.map((contact) => (
        <div className={styles.addresslist} key={contact._id}>
         <div className={styles.addresslistitem}> <div className={styles.addresslistimage}> 
         </div> 
         <img className={styles.addresslistimage} src={contact.image} /> {contact.firstName} {contact.lastName} {contact.email} {contact.phone} {contact.work}</div> 
         <button className={styles.addressedit} onClick={updateContact}>Edit</button>
         <button className={styles.addressremove} onClick={() => removeContact(contact._id)}>Remove</button>
        </div>
      ))}

        <div>
          
        

          <Button onClick={onOpen}>Add Contact</Button>
          {/* <button className={styles.addressnew} onClick={showInputBox}>Add Contact</button> */}

          {/* <button className={styles.addressnew} onClick={() => newContact(contact._id)}>Add Contact</button> */}

          {/* <button className={styles.addressnew} onClick={() => newContact(contact._id)}>Save</button> */}
         
        </div>
        
    </div>
    </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
      <Modal onClose={onClose} isOpen={isOpen} isCentered>
        <ModalOverlay />
        <ModalContent>
          <ModalCloseButton/>
          <ModalBody padding={12}>
            <h1>In THE MODAL</h1>
            
          </ModalBody>
        </ModalContent>
      </Modal>
    </div>
  )
}
